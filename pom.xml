<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>io.hgdb</groupId>
	<artifactId>hgdb-client-open</artifactId>
	<packaging>pom</packaging>
	<version>3.0.1-SNAPSHOT</version>
	<name>Mercury Client</name>
	<description>Zbiór integracji z IBM BPM i nie tylko do komunikacji z serwerem bazy Mercury.</description>

	<properties>
		<additionalArgLine>-XX:MaxPermSize=512m</additionalArgLine>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.system.libs>${local-project-workspace-path}/hgdb-client-open/integrations</project.system.libs>
		<project.local.repo>${local-project-workspace-path}/hgdb-client-open/repo</project.local.repo>
		<Sun.java.home>${local-java-home-path}</Sun.java.home>

		<org.springframework.version>5.1.0.RELEASE</org.springframework.version>
		<spring.ws.version>5.1.0.RELEASE</spring.ws.version>
		<spring.test.version>5.1.0.RELEASE</spring.test.version>
		<slf4j.version>1.7.25</slf4j.version>
		<log4j.version>1.2.14</log4j.version>
		<!-- aspectj.version>1.6.11</aspectj.version -->
		<aspectj.version>1.7.3</aspectj.version>
		<fscontext.version>1.2-beta-3</fscontext.version>
		<providerutil.version>1.2</providerutil.version>
		<commons-io.version>1.4</commons-io.version>
		<junit.version>4.12</junit.version>
		<cxf.api.version>2.7.18</cxf.api.version>
		<!-- CXF 3.0.10 -->
		<cxf.version>3.0.10</cxf.version>
		<!-- Zależności JAXB dla CXF - pozwala na obsługę SOAP -->
		<jaxb.version>2.2.11</jaxb.version>
		<poi.version>3.9-20121203</poi.version>
		<dom4j.version>1.6.1</dom4j.version>
		<xerces.version>2.11.0</xerces.version>
		<xml-apis.version>1.4.01</xml-apis.version>

		<!-- SC - komponenty Sławka Cichego <slawas@slawas.pl> -->
		<schelper.version>0.0.12.1</schelper.version>
		<!-- UWAGA! pakiet wymaga wersji ehcache minimum 2.10.1 -->
		<sccommon.version>1.0.2-SNAPSHOT</sccommon.version>
		<scfilter.version>0.0.4</scfilter.version>
		<scjdbc4jpa.version>0.0.7</scjdbc4jpa.version>
		<!-- Cache - pamięci podręczne -->
		<ehcache.version>2.10.1</ehcache.version>

		<databse.provider>POSTGRESQL</databse.provider>
		<mercury.project.version>3.0.1.0.1</mercury.project.version>
		<jackson.databind.version>2.5.3</jackson.databind.version>

		<!-- The destination file for the code coverage report has to be set to 
			the same value in the parent pom and in each module pom. Then JaCoCo will 
			add up information in the same report, so that, it will give the cross-module 
			code coverage. -->
		<sonar.jacoco.reportPaths>${local-project-workspace-path}/hgdb-client-open/target/jacoco-it.exec</sonar.jacoco.reportPaths>
		<jacoco.outputDirectory>${local-project-workspace-path}/hgdb-client-open/target/jacoco-ut</jacoco.outputDirectory>
		<dependency.scope>provided</dependency.scope>
	</properties>

	<developers>
		<developer>
			<id>slawas</id>
			<name>Sławomir Cichy</name>
			<email>slawas@slawas.pl</email>
			<roles>
				<role>developer</role>
				<role>architect</role>
				<role>manager</role>
			</roles>
			<url>https://scisoftware.pl/aboutme.html</url>
			<timezone>+1</timezone>
		</developer>
	</developers>

	<organization>
		<name>Sci Software</name>
		<url>https://scisoftware.pl</url>
	</organization>

	<reporting>
		<plugins>
			<!-- To jest dla maven 3 -->
			<!-- <plugin> <groupId>org.codehaus.sonar-plugins</groupId> <artifactId>maven-report</artifactId> 
				<version>0.1</version> </plugin> -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<reportSets>
					<reportSet>
						<reports>
							<!-- select non-aggregate reports -->
							<report>report</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.3</version>
				<configuration>
					<inputEncoding>${project.reporting.outputEncoding}</inputEncoding>
					<outputEncoding>${project.reporting.outputEncoding}</outputEncoding>
					<locales>en,pl</locales>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.9</version>
				<configuration>
					<encoding>${project.reporting.outputEncoding}</encoding>
					<show>public</show>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>2.2</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.6</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-changelog-plugin</artifactId>
				<version>2.2</version>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>taglist-maven-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<tagListOptions>
						<tagClasses>
							<tagClass>
								<displayName>Todo Work</displayName>
								<tags>
									<tag>
										<matchString>TODO</matchString>
										<matchType>ignoreCase</matchType>
									</tag>
									<tag>
										<matchString>FIXME</matchString>
										<matchType>ignoreCase</matchType>
									</tag>
								</tags>
							</tagClass>
						</tagClasses>
					</tagListOptions>
				</configuration>
			</plugin>
		</plugins>
	</reporting>

	<build>
		<extensions>
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-webdav</artifactId>
				<version>1.0-beta-2</version>
			</extension>
		</extensions>
		<plugins>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.7.4.201502262128</version>
				<executions>
					<!-- pre-unit-test execution helps setting up some maven property, which 
						will be used later by JaCoCo -->
					<execution>
						<id>pre-unit-test</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<destFile>${sonar.jacoco.reportPaths}</destFile>
							<!-- passing property which will contains settings for JaCoCo agent. 
								If not specified, then "argLine" would be used for "jar" packaging -->
							<propertyName>surefireArgLine</propertyName>
						</configuration>
					</execution>
					<!-- report phase setup -->
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<!-- output file with report data. -->
							<dataFile>${sonar.jacoco.reportPaths}</dataFile>
							<!-- output directory for the reports. -->
							<outputDirectory>${jacoco.outputDirectory}</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.14.1</version>
				<executions>
					<execution>
						<id>default-test</id>
						<phase>test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<argLine>${additionalArgLine} ${surefireArgLine}</argLine>
						</configuration>
					</execution>
				</executions>
				<configuration>
					<argLine>${additionalArgLine}</argLine>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.sonar</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>4.5.7</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.3</version>
				<configuration>
					<encoding>UTF-8</encoding>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-site-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<outputEncoding>UTF-8</outputEncoding>
				</configuration>
				<dependencies>
					<dependency><!-- add support for ssh/scp -->
						<groupId>org.apache.maven.wagon</groupId>
						<artifactId>wagon-ssh</artifactId>
						<version>1.0</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.6</version>
				<executions>
					<execution>
						<goals>
							<goal>jar</goal>
						</goals>
						<phase>test</phase>
					</execution>
				</executions>
				<configuration>
					<archive>
						<manifestEntries>
							<Implementation-Version>${project.version}</Implementation-Version>
							<Implementation-Title>${project.artifactId}</Implementation-Title>
							<Implementation-Vendor>${project.organization.name}</Implementation-Vendor>
							<Specification-Title>${project.name}</Specification-Title>
							<Specification-Version>${project.version}</Specification-Version>
							<Specification-Vendor>${project.organization.name}</Specification-Vendor>
						</manifestEntries>
					</archive>
					<outputDirectory>${project.local.repo}/io/hgdb/${project.artifactId}/${mercury.project.version}</outputDirectory>
					<finalName>${project.artifactId}-${mercury.project.version}</finalName>
				</configuration>
			</plugin>
		</plugins>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>false</filtering>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>false</filtering>
			</testResource>
		</testResources>
	</build>

	<repositories>
		<!--other repositories if any -->
		<repository>
			<id>project.local</id>
			<name>project</name>
			<url>file://${project.local.repo}</url>
		</repository>
	</repositories>

	<modules>
		<module>hgdb-client-mock</module>
		<module>hgdb-ws-client-cxf</module>
	</modules>

	<dependencies>
		<!-- slawas -->
		<!-- SC - komponenty Sławka Cichego <slawas@slawas.pl> - START -->
		<dependency>
			<groupId>pl.slawas</groupId>
			<artifactId>schelper</artifactId>
			<version>${schelper.version}</version>
			<scope>provided</scope>
			<exclusions>
				<exclusion>
					<artifactId>commons-logging</artifactId>
					<groupId>commons-logging</groupId>
				</exclusion>
				<exclusion>
					<artifactId>tools</artifactId>
					<groupId>com.sun</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>pl.slawas</groupId>
			<artifactId>sccommon-cache</artifactId>
			<version>${sccommon.version}</version>
			<scope>provided</scope>
			<exclusions>
				<exclusion>
					<artifactId>persistence-api</artifactId>
					<groupId>javax.persistence</groupId>
				</exclusion>
				<exclusion>
					<groupId>org.hibernate</groupId>
					<artifactId>hibernate-ehcache</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>pl.slawas</groupId>
			<artifactId>scjdbc4jpa</artifactId>
			<version>${scjdbc4jpa.version}</version>
			<scope>provided</scope>
			<exclusions>
				<exclusion>
					<artifactId>hibernate</artifactId>
					<groupId>org.hibernate</groupId>
				</exclusion>
				<exclusion>
					<artifactId>
						hibernate-commons-annotations
					</artifactId>
					<groupId>org.hibernate</groupId>
				</exclusion>
				<exclusion>
					<artifactId>hibernate-search</artifactId>
					<groupId>org.hibernate</groupId>
				</exclusion>
				<exclusion>
					<artifactId>persistence-api</artifactId>
					<groupId>javax.persistence</groupId>
				</exclusion>
				<exclusion>
					<artifactId>spring</artifactId>
					<groupId>org.springframework</groupId>
				</exclusion>
				<exclusion>
					<artifactId>schelper</artifactId>
					<groupId>pl.slawas</groupId>
				</exclusion>
				<exclusion>
					<artifactId>sccommon-cache</artifactId>
					<groupId>pl.slawas</groupId>
				</exclusion>
				<exclusion>
					<artifactId>aspectjweaver</artifactId>
					<groupId>org.aspectj</groupId>
				</exclusion>
				<exclusion>
					<artifactId>aspectjrt</artifactId>
					<groupId>org.aspectj</groupId>
				</exclusion>
				<exclusion>
					<artifactId>spring-aop</artifactId>
					<groupId>org.springframework</groupId>
				</exclusion>
				<exclusion>
					<artifactId>spring-test</artifactId>
					<groupId>org.springframework</groupId>
				</exclusion>
				<exclusion>
					<artifactId>hibernate-entitymanager</artifactId>
					<groupId>org.hibernate</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Mercury - START -->
		<dependency>
			<groupId>pro.ibpm.mercury</groupId>
			<artifactId>mercury-core</artifactId>
			<version>${mercury.project.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>pro.ibpm.mercury</groupId>
			<artifactId>mercury-entities</artifactId>
			<version>${databse.provider}-${mercury.project.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>pro.ibpm.mercury</groupId>
			<artifactId>mercury-srv-api</artifactId>
			<version>${mercury.project.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>pro.ibpm.mercury</groupId>
			<artifactId>mercury-ws-dto-api</artifactId>
			<version>${mercury.project.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>pro.ibpm.mercury</groupId>
			<artifactId>mercury-ws-server-api20</artifactId>
			<version>${mercury.project.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${aspectj.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>${aspectj.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- testowy JNDI kontekst START -->
		<dependency>
			<groupId>com.sun.jndi</groupId>
			<artifactId>fscontext</artifactId>
			<version>${fscontext.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.sun.jndi</groupId>
			<artifactId>providerutil</artifactId>
			<version>${providerutil.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- testowy JNDI kontekst KONIEC -->

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4j.version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- spring -->
		<!-- spring -->
		<!-- Core utilities used by other modules. Define this if you use Spring 
			Utility APIs (org.springframework.core.*/org.springframework.util.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${org.springframework.version}</version>
			<scope>${dependency.scope}</scope>
			<exclusions>
				<exclusion>
					<artifactId>commons-logging</artifactId>
					<groupId>commons-logging</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Expression Language (depends on spring-core) Define this if you use 
			Spring Expression APIs (org.springframework.expression.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-expression</artifactId>
			<version>${org.springframework.version}</version>
			<scope>${dependency.scope}</scope>
		</dependency>

		<!-- Bean Factory and JavaBeans utilities (depends on spring-core) Define 
			this if you use Spring Bean APIs (org.springframework.beans.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${org.springframework.version}</version>
			<scope>${dependency.scope}</scope>
		</dependency>

		<!-- Aspect Oriented Programming (AOP) Framework (depends on spring-core, 
			spring-beans) Define this if you use Spring AOP APIs (org.springframework.aop.*) -->
		<!-- https://mvnrepository.com/artifact/org.springframework/spring-aop -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${org.springframework.version}</version>
			<scope>${dependency.scope}</scope>
		</dependency>

		<!-- Application Context (depends on spring-core, spring-expression, spring-aop, 
			spring-beans) This is the central artifact for Spring's Dependency Injection 
			Container and is generally always defined -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${org.springframework.version}</version>
			<scope>${dependency.scope}</scope>
			<exclusions>
				<exclusion>
					<artifactId>spring-aop</artifactId>
					<groupId>org.springframework</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Various Application Context utilities, including EhCache, JavaMail, 
			Quartz, and Freemarker integration Define this if you need any of these integrations -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${org.springframework.version}</version>
			<scope>${dependency.scope}</scope>
		</dependency>

		<!-- Transaction Management Abstraction (depends on spring-core, spring-beans, 
			spring-aop, spring-context) Define this if you use Spring Transactions or 
			DAO Exception Hierarchy (org.springframework.transaction.*/org.springframework.dao.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${org.springframework.version}</version>
			<scope>${dependency.scope}</scope>
		</dependency>

		<!-- JDBC Data Access Library (depends on spring-core, spring-beans, spring-context, 
			spring-tx) Define this if you use Spring's JdbcTemplate API (org.springframework.jdbc.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${org.springframework.version}</version>
			<scope>${dependency.scope}</scope>
		</dependency>

		<!-- Object-to-Relation-Mapping (ORM) integration with Hibernate, JPA, 
			and iBatis. (depends on spring-core, spring-beans, spring-context, spring-tx) 
			Define this if you need ORM (org.springframework.orm.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${org.springframework.version}</version>
			<scope>${dependency.scope}</scope>
		</dependency>

		<!-- Object-to-XML Mapping (OXM) abstraction and integration with JAXB, 
			JiBX, Castor, XStream, and XML Beans. (depends on spring-core, spring-beans, 
			spring-context) Define this if you need OXM (org.springframework.oxm.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-oxm</artifactId>
			<version>${org.springframework.version}</version>
			<scope>${dependency.scope}</scope>
		</dependency>

		<!-- Web application development utilities applicable to both Servlet and 
			Portlet Environments (depends on spring-core, spring-beans, spring-context) 
			Define this if you use Spring MVC, or wish to use Struts, JSF, or another 
			web framework with Spring (org.springframework.web.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${org.springframework.version}</version>
			<scope>${dependency.scope}</scope>
			<exclusions>
				<exclusion>
					<artifactId>spring-aop</artifactId>
					<groupId>org.springframework</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Spring MVC for Servlet Environments (depends on spring-core, spring-beans, 
			spring-context, spring-web) Define this if you use Spring MVC with a Servlet 
			Container such as Apache Tomcat (org.springframework.web.servlet.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${org.springframework.version}</version>
			<scope>${dependency.scope}</scope>
		</dependency>

		<!-- Spring MVC for Portlet Environments (depends on spring-core, spring-beans, 
			spring-context, spring-web) Define this if you use Spring MVC with a Portlet 
			Container (org.springframework.web.portlet.*) -->
		<!-- <dependency> <groupId>org.springframework</groupId> <artifactId>spring-webmvc-portlet</artifactId> 
			<version>${org.springframework.version}</version> <scope>${dependency.scope}</scope> 
			</dependency> -->

		<!-- Support for testing Spring applications with tools such as JUnit and 
			TestNG This artifact is generally always defined with a 'test' scope for 
			the integration testing framework and unit testing stubs -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.test.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.springframework/spring-jms -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jms</artifactId>
			<version>${org.springframework.version}</version>
			<scope>${dependency.scope}</scope>
		</dependency>		
		<!-- //spring -->

		<!-- potrzebne do parsowania JSON'a -->
		<dependency>
			<groupId>net.sf.json-lib</groupId>
			<artifactId>json-lib</artifactId>
			<version>2.2.3</version>
			<classifier>jdk15</classifier>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>3.2.1</version>
		</dependency>
		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
			<version>1.8.0</version>
		</dependency>
		<!-- potrzebne do parsowania JSON'a -->

		<!-- Commons -->
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.3</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.1.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commons-io.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>commons-discovery</groupId>
			<artifactId>commons-discovery</artifactId>
			<version>0.4</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.2.2</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>jdom</groupId>
			<artifactId>jdom</artifactId>
			<version>1.1</version>
			<scope>provided</scope>
		</dependency>

		<!-- Do testów -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- //Do testów -->
		<dependency>
			<groupId>javax.persistence</groupId>
			<artifactId>persistence-api</artifactId>
			<version>1.0</version>
			<scope>provided</scope>
		</dependency>

		<!-- EhCache -->
		<dependency>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache</artifactId>
			<version>${ehcache.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.axis</groupId>
			<artifactId>axis-jaxrpc</artifactId>
			<version>1.4</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.axis</groupId>
			<artifactId>axis</artifactId>
			<version>1.4</version>
			<scope>provided</scope>
		</dependency>

		<!-- WS IBM librares -->
		<!-- potrzebne np. do kodowania haseł -->
		<dependency>
			<groupId>org.eclipse.wst.common</groupId>
			<artifactId>emf</artifactId>
			<version>1.1.103.v200706071630</version>
		</dependency>
		<dependency>
			<groupId>com.ibm.ws.ejb</groupId>
			<artifactId>thinclient</artifactId>
			<version>7.0.0</version>
		</dependency>
		<!-- Produkt IBM BPM: KONIEC -->

		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>${poi.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-excelant</artifactId>
			<version>${poi.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>${poi.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml-schemas</artifactId>
			<version>${poi.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-scratchpad</artifactId>
			<version>${poi.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.xmlbeans</groupId>
			<artifactId>xmlbeans-xmlpublic</artifactId>
			<version>2.5.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.xmlbeans</groupId>
			<artifactId>xmlbeans</artifactId>
			<version>2.5.0</version>
		</dependency>
		<!-- Apache POI: KONIEC -->

		<!-- https://mvnrepository.com/artifact/xerces/xercesImpl -->
		<dependency>
			<groupId>xerces</groupId>
			<artifactId>xercesImpl</artifactId>
			<version>${xerces.version}</version>
			<scope>provided</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/xml-apis/xml-apis -->
		<dependency>
			<groupId>xml-apis</groupId>
			<artifactId>xml-apis</artifactId>
			<version>${xml-apis.version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- Jackson JSON Processor -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson.databind.version}</version>
		</dependency>

		<dependency>
			<groupId>org.eclipse.persistence</groupId>
			<artifactId>org.eclipse.persistence.moxy</artifactId>
			<version>2.5.0-RC1</version>
			<exclusions>
				<exclusion>
					<groupId>org.eclipse.persistence</groupId>
					<artifactId>commonj.sdo</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

	</dependencies>
</project>